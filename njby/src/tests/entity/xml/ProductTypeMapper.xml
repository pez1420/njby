<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tests.mapper.ProductTypeMapper">
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="orders" jdbcType="INTEGER" property="orders" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent" jdbcType="VARCHAR" property="parent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tests.entity.ProductType">
    <result column="tree_path" jdbcType="LONGVARCHAR" property="treePath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, orders, name, parent
  </sql>
  <sql id="Blob_Column_List">
    tree_path
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tests.entity.ProductTypeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, orders, name, 
      parent, tree_path)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{orders,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{parent,jdbcType=VARCHAR}, #{treePath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="treePath != null">
        tree_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="treePath != null">
        #{treePath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.treePath != null">
        tree_path = #{record.treePath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR},
      tree_path = #{record.treePath,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="orders" jdbcType="INTEGER" property="orders" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent" jdbcType="VARCHAR" property="parent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tests.entity.ProductType">
    <result column="tree_path" jdbcType="LONGVARCHAR" property="treePath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, orders, name, parent
  </sql>
  <sql id="Blob_Column_List">
    tree_path
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tests.entity.ProductTypeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, orders, name, 
      parent, tree_path)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{orders,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{parent,jdbcType=VARCHAR}, #{treePath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="treePath != null">
        tree_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="treePath != null">
        #{treePath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.treePath != null">
        tree_path = #{record.treePath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR},
      tree_path = #{record.treePath,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="orders" jdbcType="INTEGER" property="orders" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent" jdbcType="VARCHAR" property="parent" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="tests.entity.ProductType">
    <result column="tree_path" jdbcType="LONGVARCHAR" property="treePath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, orders, name, parent
  </sql>
  <sql id="Blob_Column_List">
    tree_path
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="tests.entity.ProductTypeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, orders, name, 
      parent, tree_path)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{orders,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{parent,jdbcType=VARCHAR}, #{treePath,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parent != null">
        parent,
      </if>
      <if test="treePath != null">
        tree_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="treePath != null">
        #{treePath,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent != null">
        parent = #{record.parent,jdbcType=VARCHAR},
      </if>
      <if test="record.treePath != null">
        tree_path = #{record.treePath,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR},
      tree_path = #{record.treePath,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      orders = #{record.orders,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      parent = #{record.parent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="seo_title" jdbcType="VARCHAR" property="seoTitle" />
    <result column="seo_keywords" jdbcType="VARCHAR" property="seoKeywords" />
    <result column="seo_description" jdbcType="VARCHAR" property="seoDescription" />
    <result column="tree_parent1_id" jdbcType="VARCHAR" property="treeParent1Id" />
    <result column="tree_parent2_id" jdbcType="VARCHAR" property="treeParent2Id" />
    <result column="tree_parent3_id" jdbcType="VARCHAR" property="treeParent3Id" />
    <result column="tree_parent4_id" jdbcType="VARCHAR" property="treeParent4Id" />
    <result column="tree_parent5_id" jdbcType="VARCHAR" property="treeParent5Id" />
    <result column="tree_parent6_id" jdbcType="VARCHAR" property="treeParent6Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, name, seo_title, seo_keywords, seo_description, 
    tree_parent1_id, tree_parent2_id, tree_parent3_id, tree_parent4_id, tree_parent5_id, 
    tree_parent6_id
  </sql>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, name, seo_title, 
      seo_keywords, seo_description, tree_parent1_id, 
      tree_parent2_id, tree_parent3_id, tree_parent4_id, 
      tree_parent5_id, tree_parent6_id)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{seoTitle,jdbcType=VARCHAR}, 
      #{seoKeywords,jdbcType=VARCHAR}, #{seoDescription,jdbcType=VARCHAR}, #{treeParent1Id,jdbcType=VARCHAR}, 
      #{treeParent2Id,jdbcType=VARCHAR}, #{treeParent3Id,jdbcType=VARCHAR}, #{treeParent4Id,jdbcType=VARCHAR}, 
      #{treeParent5Id,jdbcType=VARCHAR}, #{treeParent6Id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="seoTitle != null">
        seo_title,
      </if>
      <if test="seoKeywords != null">
        seo_keywords,
      </if>
      <if test="seoDescription != null">
        seo_description,
      </if>
      <if test="treeParent1Id != null">
        tree_parent1_id,
      </if>
      <if test="treeParent2Id != null">
        tree_parent2_id,
      </if>
      <if test="treeParent3Id != null">
        tree_parent3_id,
      </if>
      <if test="treeParent4Id != null">
        tree_parent4_id,
      </if>
      <if test="treeParent5Id != null">
        tree_parent5_id,
      </if>
      <if test="treeParent6Id != null">
        tree_parent6_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="seoTitle != null">
        #{seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="seoKeywords != null">
        #{seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="seoDescription != null">
        #{seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="treeParent1Id != null">
        #{treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent2Id != null">
        #{treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent3Id != null">
        #{treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent4Id != null">
        #{treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent5Id != null">
        #{treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent6Id != null">
        #{treeParent6Id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.seoTitle != null">
        seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.seoKeywords != null">
        seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="record.seoDescription != null">
        seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent1Id != null">
        tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent2Id != null">
        tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent3Id != null">
        tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent4Id != null">
        tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent5Id != null">
        tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent6Id != null">
        tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="seo_title" jdbcType="VARCHAR" property="seoTitle" />
    <result column="seo_keywords" jdbcType="VARCHAR" property="seoKeywords" />
    <result column="seo_description" jdbcType="VARCHAR" property="seoDescription" />
    <result column="tree_parent1_id" jdbcType="VARCHAR" property="treeParent1Id" />
    <result column="tree_parent2_id" jdbcType="VARCHAR" property="treeParent2Id" />
    <result column="tree_parent3_id" jdbcType="VARCHAR" property="treeParent3Id" />
    <result column="tree_parent4_id" jdbcType="VARCHAR" property="treeParent4Id" />
    <result column="tree_parent5_id" jdbcType="VARCHAR" property="treeParent5Id" />
    <result column="tree_parent6_id" jdbcType="VARCHAR" property="treeParent6Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, name, seo_title, seo_keywords, seo_description, 
    tree_parent1_id, tree_parent2_id, tree_parent3_id, tree_parent4_id, tree_parent5_id, 
    tree_parent6_id
  </sql>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, name, seo_title, 
      seo_keywords, seo_description, tree_parent1_id, 
      tree_parent2_id, tree_parent3_id, tree_parent4_id, 
      tree_parent5_id, tree_parent6_id)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{seoTitle,jdbcType=VARCHAR}, 
      #{seoKeywords,jdbcType=VARCHAR}, #{seoDescription,jdbcType=VARCHAR}, #{treeParent1Id,jdbcType=VARCHAR}, 
      #{treeParent2Id,jdbcType=VARCHAR}, #{treeParent3Id,jdbcType=VARCHAR}, #{treeParent4Id,jdbcType=VARCHAR}, 
      #{treeParent5Id,jdbcType=VARCHAR}, #{treeParent6Id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="seoTitle != null">
        seo_title,
      </if>
      <if test="seoKeywords != null">
        seo_keywords,
      </if>
      <if test="seoDescription != null">
        seo_description,
      </if>
      <if test="treeParent1Id != null">
        tree_parent1_id,
      </if>
      <if test="treeParent2Id != null">
        tree_parent2_id,
      </if>
      <if test="treeParent3Id != null">
        tree_parent3_id,
      </if>
      <if test="treeParent4Id != null">
        tree_parent4_id,
      </if>
      <if test="treeParent5Id != null">
        tree_parent5_id,
      </if>
      <if test="treeParent6Id != null">
        tree_parent6_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="seoTitle != null">
        #{seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="seoKeywords != null">
        #{seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="seoDescription != null">
        #{seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="treeParent1Id != null">
        #{treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent2Id != null">
        #{treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent3Id != null">
        #{treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent4Id != null">
        #{treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent5Id != null">
        #{treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent6Id != null">
        #{treeParent6Id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.seoTitle != null">
        seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.seoKeywords != null">
        seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="record.seoDescription != null">
        seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent1Id != null">
        tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent2Id != null">
        tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent3Id != null">
        tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent4Id != null">
        tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent5Id != null">
        tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent6Id != null">
        tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="tests.entity.ProductType">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="seo_title" jdbcType="VARCHAR" property="seoTitle" />
    <result column="seo_keywords" jdbcType="VARCHAR" property="seoKeywords" />
    <result column="seo_description" jdbcType="VARCHAR" property="seoDescription" />
    <result column="tree_parent1_id" jdbcType="VARCHAR" property="treeParent1Id" />
    <result column="tree_parent2_id" jdbcType="VARCHAR" property="treeParent2Id" />
    <result column="tree_parent3_id" jdbcType="VARCHAR" property="treeParent3Id" />
    <result column="tree_parent4_id" jdbcType="VARCHAR" property="treeParent4Id" />
    <result column="tree_parent5_id" jdbcType="VARCHAR" property="treeParent5Id" />
    <result column="tree_parent6_id" jdbcType="VARCHAR" property="treeParent6Id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, modify_date, grade, name, seo_title, seo_keywords, seo_description, 
    tree_parent1_id, tree_parent2_id, tree_parent3_id, tree_parent4_id, tree_parent5_id, 
    tree_parent6_id
  </sql>
  <select id="selectByExample" parameterType="tests.entity.ProductTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="tests.entity.ProductTypeExample">
    delete from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="tests.entity.ProductType">
    insert into product_type (id, create_date, modify_date, 
      grade, name, seo_title, 
      seo_keywords, seo_description, tree_parent1_id, 
      tree_parent2_id, tree_parent3_id, tree_parent4_id, 
      tree_parent5_id, tree_parent6_id)
    values (#{id,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{grade,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{seoTitle,jdbcType=VARCHAR}, 
      #{seoKeywords,jdbcType=VARCHAR}, #{seoDescription,jdbcType=VARCHAR}, #{treeParent1Id,jdbcType=VARCHAR}, 
      #{treeParent2Id,jdbcType=VARCHAR}, #{treeParent3Id,jdbcType=VARCHAR}, #{treeParent4Id,jdbcType=VARCHAR}, 
      #{treeParent5Id,jdbcType=VARCHAR}, #{treeParent6Id,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="tests.entity.ProductType">
    insert into product_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="seoTitle != null">
        seo_title,
      </if>
      <if test="seoKeywords != null">
        seo_keywords,
      </if>
      <if test="seoDescription != null">
        seo_description,
      </if>
      <if test="treeParent1Id != null">
        tree_parent1_id,
      </if>
      <if test="treeParent2Id != null">
        tree_parent2_id,
      </if>
      <if test="treeParent3Id != null">
        tree_parent3_id,
      </if>
      <if test="treeParent4Id != null">
        tree_parent4_id,
      </if>
      <if test="treeParent5Id != null">
        tree_parent5_id,
      </if>
      <if test="treeParent6Id != null">
        tree_parent6_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="seoTitle != null">
        #{seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="seoKeywords != null">
        #{seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="seoDescription != null">
        #{seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="treeParent1Id != null">
        #{treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent2Id != null">
        #{treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent3Id != null">
        #{treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent4Id != null">
        #{treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent5Id != null">
        #{treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="treeParent6Id != null">
        #{treeParent6Id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="tests.entity.ProductTypeExample" resultType="java.lang.Integer">
    select count(*) from product_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_type
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null">
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.seoTitle != null">
        seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.seoKeywords != null">
        seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      </if>
      <if test="record.seoDescription != null">
        seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent1Id != null">
        tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent2Id != null">
        tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent3Id != null">
        tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent4Id != null">
        tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent5Id != null">
        tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      </if>
      <if test="record.treeParent6Id != null">
        tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_type
    set id = #{record.id,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      grade = #{record.grade,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      seo_title = #{record.seoTitle,jdbcType=VARCHAR},
      seo_keywords = #{record.seoKeywords,jdbcType=VARCHAR},
      seo_description = #{record.seoDescription,jdbcType=VARCHAR},
      tree_parent1_id = #{record.treeParent1Id,jdbcType=VARCHAR},
      tree_parent2_id = #{record.treeParent2Id,jdbcType=VARCHAR},
      tree_parent3_id = #{record.treeParent3Id,jdbcType=VARCHAR},
      tree_parent4_id = #{record.treeParent4Id,jdbcType=VARCHAR},
      tree_parent5_id = #{record.treeParent5Id,jdbcType=VARCHAR},
      tree_parent6_id = #{record.treeParent6Id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>